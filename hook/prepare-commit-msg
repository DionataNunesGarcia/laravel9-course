#!/usr/bin/env python3
import sys, os, re
from subprocess import check_output

# Collect the parameters
commit_msg_filepath = sys.argv[1]
if len(sys.argv) > 2:
    commit_type = sys.argv[2]
else:
    commit_type = ''

if len(sys.argv) > 3:
    commit_hash = sys.argv[3]
else:
    commit_hash = ''

# Main definition - constants
menu_actions  = {}

# =======================
#     MENUS FUNCTIONS
# =======================

# Main menu
def main_menu():
    # os.system('clear')
    print ("prepare-commit-msg: File: %s" % (commit_msg_filepath))
    # Figure out which branch we're on
    branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip()
    print ("prepare-commit-msg: On branch '%s'" % branch)

    print ("Select the type of change that you're committing:")
    print ("1. feat:\tA new feature")
    print ("2. fix:\t\tA bug fix")
    print ("3. WIP:\t\tA work in progress")
    print ("4. docs:\tDocumentation only changes")
    print ("5. style:\tChanges that do not affect the meaning of the code")
    print ("6. refactor:\tA code change that neither fixes a bug nor adds a feature")
    print ("7. chore:\tOther changes that don't modify src or test files")
    print ("8. perf:\tA code change that improves performance")
    print ("0. Quit")
    sys.stdin = open('/dev/tty')
    choice = input('>> ')
    exec_menu(choice)

# Execute menu
def exec_menu(choice):
    # os.system('clear')
    ch = choice.lower()
    if ch == '':
        print ("Invalid selection, please try again.\n")
        menu_actions['main_menu']()
    else:
        try:
            menu1(menu_prefixes[choice])
        except KeyError:
            print ("Invalid selection, please try again.\n")
            menu_actions['main_menu']()

# Menu 1
def menu1(prefix):
    if (prefix == 'exit'):
        sys.exit(1)

    response = "%s: " % prefix

    short = ''
    while len(short) < 15:
        print ("\nWrite a short, imperative tense description of the change (min 15 chars!):")
        short = input()

    response = response + "%s" % short

    print ("\nDoes this change affect any open issues? [y/N]:")
    p = input()
    if p.strip().lower().startswith('y'):
        print ('\nAdd issue references (e.g. "Fix #123", "Ref #123", "Closes #4, #6, Related to #5":')
        issue = input()
        if issue.startswith('#'):
            issue = "Issue %s" % issue

        response = response + "\n\n%s" % issue

    with open(commit_msg_filepath, 'r+') as f:
        content = f.read()
        f.seek(0, 0)
        f.write("%s\n\n%s" % (response, content))
        exit()

# Back to main menu
def back():
    menu_actions['main_menu']()

# Exit program
def exit():
    sys.exit()

# =======================
#    MENUS DEFINITIONS
# =======================

# Menu Prefixes
menu_prefixes = {
    '1': 'feat',
    '2': 'fix',
    '3': 'WIP',
    '4': 'docs',
    '5': 'style',
    '6': 'refactor',
    '7': 'chore',
    '8': 'perf',
    '0': 'exit'
}

# Menu definition
menu_actions = {
    'main_menu': main_menu,
    '1': menu1,
    '9': back,
    '0': exit,
}

# =======================
#      MAIN PROGRAM
# =======================

# Main Program
if __name__ == "__main__":
    # Launch main menu
    main_menu()
